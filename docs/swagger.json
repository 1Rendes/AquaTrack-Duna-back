{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "AquaTrack",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "AquaTrack with user authorization"
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    },
    {
      "url": "https://aquatrack-duna-server.onrender.com"
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": [
          "Authorization"
        ],
        "summary": "Register new user",
        "operationId": "registerUser",
        "description": "Create a new user",
        "security": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully registered a user!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully registered a user!"
                    },
                    "data": {
                      "$ref": "#/components/schemas/user"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Authorization"
        ],
        "summary": "Login existing user",
        "operationId": "loginUser",
        "description": "Loginning an user",
        "security": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully logged in a user!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully logged in a user!"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "accessToken",
                        "user"
                      ],
                      "properties": {
                        "accessToken": {
                          "type": "string",
                          "example": "6U7spnH2fzgvZsPM6Rjm6UPhUZ2Wbk6RIks7XfT0"
                        },
                        "user": {
                          "$ref": "#/components/schemas/user"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/auth/refresh": {
      "post": {
        "tags": [
          "Authorization"
        ],
        "summary": "Refresh session",
        "operationId": "refreshSession",
        "description": "Refresh session for current user",
        "security": [],
        "responses": {
          "200": {
            "description": "Successfully logged in an user!!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully registered a user!"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "accessToken",
                        "user"
                      ],
                      "properties": {
                        "accessToken": {
                          "type": "string",
                          "example": "6U7spnH2fzgvZsPM6Rjm6UPhUZ2Wbk6RIks7XfT0"
                        },
                        "user": {
                          "$ref": "#/components/schemas/user"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": [
          "Authorization"
        ],
        "summary": "Logout current user",
        "operationId": "logoutUser",
        "description": "Logging out current user",
        "security": [],
        "responses": {
          "204": {
            "description": "Logging out current user"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/auth/send-reset-email": {
      "post": {
        "tags": [
          "Authorization"
        ],
        "summary": "Send reset email",
        "operationId": "sendResetEmail",
        "description": "Send an email with link to reset password",
        "security": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email"
                ],
                "properties": {
                  "email": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Reset password email has been successfully sent.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Reset password email has been successfully sent."
                    },
                    "data": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/auth/reset-pwd": {
      "post": {
        "tags": [
          "Authorization"
        ],
        "summary": "Reset password",
        "operationId": "ResetPassword",
        "description": "Write a new password to user, that sending correct token and password",
        "security": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "token",
                  "password"
                ],
                "properties": {
                  "token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI2NzI2MmVjYWI3ZjY4OWFjZGQyMGUxOTUiLCJlbWFpbCI6IjFhZG1pbkB1a3IubmV0IiwiaWF0IjoxNzMxMzMxODYzLCJleHAiOjE3MzEzMzIxNjN9.WvjLlAHXWHUY2GLnyK9SnYvaa-BoY3IODs2o4Qi6Anw"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Reset password email has been successfully sent.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Reset password email has been successfully sent."
                    },
                    "data": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/users/current": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get current User",
        "operationId": "getUser",
        "description": "Get current User",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Get current User",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found user with id 67273b9b68409d5240f62ed7!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/user"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      },
      "patch": {
        "tags": [
          "Users"
        ],
        "summary": "Patch current User",
        "operationId": "patchUser",
        "description": "Patch current User",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "User's name",
                    "type": "string",
                    "example": "John Doe"
                  },
                  "email": {
                    "description": "User's email",
                    "type": "string"
                  },
                  "weight": {
                    "description": "User's weight",
                    "type": "number",
                    "example": 50
                  },
                  "activityLevel": {
                    "description": "Level of user's activity",
                    "type": "number",
                    "example": 1
                  },
                  "gender": {
                    "description": "User's gender",
                    "type": "string",
                    "enum": [
                      "male",
                      "female"
                    ],
                    "example": "female"
                  },
                  "dailyRequirement": {
                    "description": "User's daily value of water to drink, ml",
                    "type": "number",
                    "example": 1500
                  },
                  "photo": {
                    "description": "User photo",
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Patches current user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully patched a user!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/user"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/water": {
      "post": {
        "tags": [
          "Water"
        ],
        "summary": "Add Water",
        "operationId": "addWater",
        "description": "Create a note about portion of water",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "amount",
                  "time",
                  "percentage"
                ],
                "properties": {
                  "amount": {
                    "description": "Amount of a water portion",
                    "type": "integer",
                    "example": 250
                  },
                  "time": {
                    "description": "Time of drinking",
                    "type": "string",
                    "example": "2024-11-24T07:00:00"
                  },
                  "percentage": {
                    "description": "Part in daily norm, percentage",
                    "type": "integer",
                    "example": 20
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Creates a water",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Water added successfully"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/water"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/water/{waterId}": {
      "delete": {
        "tags": [
          "Water"
        ],
        "summary": "Delete water portion by id",
        "operationId": "deletePortion",
        "description": "Delete portion by id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "waterId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "664ca67erae7f10c88b598y"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Delete water portion by id"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      },
      "patch": {
        "tags": [
          "Water"
        ],
        "summary": "Patch water portion by id",
        "operationId": "patchPortion",
        "description": "Patch portion by id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "waterId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "664ca67erae7f10c88b598y"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "amount": {
                    "description": "Amount of a water portion ",
                    "type": "integer",
                    "example": 250
                  },
                  "time": {
                    "description": "Time of drinking",
                    "type": "string",
                    "example": "2024-11-24T07:00:00"
                  },
                  "percentage": {
                    "description": "Part in daily norm, percentage",
                    "type": "integer",
                    "example": 20
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Patches a water portion",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Water updated successfully"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/water"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/water/day/{date}": {
      "get": {
        "tags": [
          "Water"
        ],
        "summary": "Get data on the drunk water for the day",
        "operationId": "getWaterPortionsPerDay",
        "description": "Get data on the drunk water for the day",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "date",
            "required": true,
            "schema": {
              "type": "string",
              "example": "2024-11-04",
              "pattern": "/^\\d{4}-\\d{2}-\\d{2}$/"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Water by date found successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Water by date 2024-11-04 found successfully!"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "string",
                            "example": "674ead54901308f819537a1f"
                          },
                          "amount": {
                            "type": "integer",
                            "example": 60
                          },
                          "userId": {
                            "type": "string",
                            "example": "674171f2b4b44629d5f7d72c"
                          },
                          "time": {
                            "type": "string",
                            "example": "2024-10-02T17:48:50"
                          },
                          "percentage": {
                            "type": "integer",
                            "example": 89
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/water/month/{month}": {
      "get": {
        "tags": [
          "Water"
        ],
        "summary": "Get data on the drunk water for the month",
        "operationId": "getDaysPerMonth",
        "description": "Get data on the drunk water for the month",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "month",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "/^\\d{4}-\\d{2}$/",
              "example": "2024-11"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Water by month found successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Water by date 2024-11-04 found successfully!"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "day": {
                            "type": "string",
                            "example": "2024-11-04"
                          },
                          "percentage": {
                            "type": "integer",
                            "example": 89
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "user": {
        "type": "object",
        "required": [
          "_id",
          "name",
          "email",
          "password"
        ],
        "properties": {
          "_id": {
            "description": "User's id",
            "type": "string",
            "example": "664ca67erae7f10c88b598y"
          },
          "name": {
            "description": "User's name",
            "type": "string",
            "minLength": 3,
            "maxLength": 20,
            "example": "John Doe"
          },
          "email": {
            "description": "User's email",
            "type": "string",
            "format": "email",
            "example": "user@mail.com"
          },
          "weight": {
            "description": "User's weight in kilograms",
            "type": "number",
            "minimum": 0,
            "maximum": 500,
            "example": 70
          },
          "activityLevel": {
            "description": "Level of user's activity",
            "type": "number",
            "minimum": 0,
            "maximum": 24,
            "example": 3
          },
          "gender": {
            "description": "User's gender",
            "type": "string",
            "enum": [
              "male",
              "female"
            ],
            "example": "female"
          },
          "dailyRequirement": {
            "description": "User's daily water intake requirement in ml",
            "type": "integer",
            "minimum": 200,
            "maximum": 15000,
            "example": 1500
          },
          "photo": {
            "description": "Link to user's photo",
            "type": "string",
            "example": "https://res.cloudinary.com/dsp7xc3fh/image/upload/v1730624509/kzkhsbcokzfcxanrr4hf.png"
          }
        }
      },
      "water": {
        "type": "object",
        "required": [
          "amount",
          "time",
          "percentage",
          "userId"
        ],
        "properties": {
          "_id": {
            "description": "Id of water portion",
            "type": "string",
            "example": "674340b9d687f43970852f8f"
          },
          "amount": {
            "description": "Amount of a water portion in milliliters",
            "type": "integer",
            "minimum": 50,
            "maximum": 5000,
            "example": 250
          },
          "time": {
            "description": "Time of drinking in ISO 8601 format",
            "type": "string",
            "format": "date-time",
            "example": "2024-11-24T07:00:00"
          },
          "percentage": {
            "description": "Part in daily norm, percentage",
            "type": "integer",
            "minimum": 0,
            "maximum": 100,
            "example": 89
          },
          "userId": {
            "description": "Id of user who drinks",
            "type": "string",
            "example": "664ca67erae7f10c88b598y"
          }
        }
      }
    },
    "responses": {
      "400": {
        "description": "Bad Request",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "error"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 400
                },
                "message": {
                  "type": "string",
                  "example": "BadRequestError"
                },
                "error": {
                  "type": "object",
                  "required": [
                    "message",
                    "errors"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Bad Request"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string",
                            "example": "\"password\" is required"
                          },
                          "path": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "type": {
                            "type": "string",
                            "example": "any.required"
                          },
                          "context": {
                            "type": "object",
                            "properties": {
                              "label": {
                                "type": "string",
                                "example": "password"
                              },
                              "key": {
                                "type": "string",
                                "example": "password"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "401": {
        "description": "Unauthorized error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "UnauthorizedError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Token is expired or invalid."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "404": {
        "description": "Not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "error"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 404
                },
                "message": {
                  "type": "string",
                  "example": "NotFoundError"
                },
                "error": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User not found"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "500": {
        "description": "Internal Server Error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 500
                },
                "message": {
                  "type": "string",
                  "example": "An unexpected error occurred on the server"
                },
                "details": {
                  "type": "string",
                  "description": "Additional information about the error",
                  "example": "Failed to send the email, please try again later"
                }
              }
            }
          }
        }
      }
    }
  }
}